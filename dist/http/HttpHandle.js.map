{"version":3,"file":"HttpHandle.js","sourceRoot":"","sources":["../../src/http/HttpHandle.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;GAEG;AACH,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAIlD,IAAa,UAAU;IACrB,oBAAmB,MAAc,EAAU,SAAoB;QAA5C,WAAM,GAAN,MAAM,CAAQ;QAAU,cAAS,GAAT,SAAS,CAAW;QAC7D,MAAM,CAAC,SAAS,CAAC,gBAAgB,EAAE,UAAC,GAAU,EAAE,OAAY;YAC1D,SAAS,CAAC,WAAW,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,UAAC,GAAU,EAAE,OAAY,EAAE,GAAQ;YACrE,SAAS,CAAC,WAAW,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,aAAa,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,eAAe,EAAE,UAAC,GAAU,EAAE,OAAY,EAAE,KAAU;YACrE,SAAS,CAAC,WAAW,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YAC3F,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC1B,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjB,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAChC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC1B,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC1B,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,iBAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,UAAU;IADtB,UAAU,EAAE;qCAEgB,MAAM,EAAqB,SAAS;GADpD,UAAU,CA4BtB;SA5BY,UAAU","sourcesContent":["/**\n * http请求handle\n */\nimport { Events } from 'ionic-angular';\nimport { Injectable } from '@angular/core';\nimport { UIService } from \"../provider/UIService\";\n\n\n@Injectable()\nexport class HttpHandle {\n  constructor(public events: Events, private uiService: UIService) {\n    events.subscribe('request:before', (url:string, options?:any) => {\n      uiService.showLoading();\n      console.log('%c 请求前 %c', 'color:blue', '', 'url', url, 'options', options);\n    });\n\n    events.subscribe('request:success', (url:string, options?:any, res?:any) => {\n      uiService.hideLoading();\n      console.log('%c 请求成功 %c', 'color:green', '', 'url', url, 'options', options, 'res', res);\n    });\n\n    events.subscribe('request:error', (url:string, options?:any, error?:any) => {\n      uiService.hideLoading();\n      console.log('%c 请求失败 %c', 'color:red', '', 'url', url, 'options', options, 'error', error);\n      let status = error.status;\n      if (status === 0) {\n        uiService.showToast('服务连接失败');\n      } else if (status === 404) {\n        uiService.showToast('请求地址不存在');\n      } else if (status === 500) {\n        uiService.showToast('服务器出错，请稍后再试');\n      } else {\n        uiService.showToast('未知错误，请检查网络');\n      }\n    });\n  }\n\n}\n"]}