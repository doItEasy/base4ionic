{"version":3,"file":"UIService.js","sourceRoot":"","sources":["../../src/provider/UIService.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;;;GAIG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,iBAAiB,EAAE,QAAQ,EAAW,eAAe,EAAE,MAAM,eAAe,CAAC;AACvG,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,OAAO,EAAC,MAAM,uBAAuB,CAAC;AAI/C,IAAa,SAAS;IAIpB,mBAAoB,QAAkB,EAClB,SAA0B,EAC1B,WAA8B,EAC9B,SAA0B,EAC1B,OAAe,EACf,KAAY;QALZ,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAiB;QAC1B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAiB;QAC1B,YAAO,GAAP,OAAO,CAAQ;QACf,UAAK,GAAL,KAAK,CAAO;QAPxB,gBAAW,GAAY,KAAK,CAAC;IAUrC,CAAC;IAGD;;;OAGG;IACH,4BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;IACtE,CAAC;IAED;;;OAGG;IACH,6BAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;IAED;;;OAGG;IACH,yBAAK,GAAL;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChH,CAAC;IAID,6BAAS,GAAT,UAAU,OAAe,EAAE,QAAuB;QAAvB,yBAAA,EAAA,eAAuB;QAChD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QACnE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACpB,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,QAAQ;gBAClB,eAAe,EAAE,KAAK;aACvB,CAAC,CAAC,OAAO,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAAA,CAAC;IAGF,mCAAe,GAAf,UAAgB,OAAe,EAAE,QAAuB;QAAvB,yBAAA,EAAA,eAAuB;QACtD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QACnE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACpB,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,QAAQ;gBAClB,eAAe,EAAE,KAAK;aACvB,CAAC,CAAC,OAAO,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAAA,CAAC;IAEF,gCAAY,GAAZ,UAAa,OAAe,EAAE,QAAuB;QAAvB,yBAAA,EAAA,eAAuB;QACnD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACpB,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,KAAK;gBACf,eAAe,EAAE,KAAK;aACvB,CAAC,CAAC,OAAO,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAAA,CAAC;IAEF,kCAAc,GAAd,UAAe,KAAa,EAAE,OAAe,EAAE,EAAM;QACnD,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,cAAO,CAAC;iBAClB;gBACD;oBACE,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE;wBACP,EAAE,EAAE,CAAC;oBACP,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,gCAAY,GAAZ,UAAa,OAAe;QAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,QAAQ,EAAE,OAAO;YACjB,OAAO,EAAE,CAAC,IAAI,CAAC;SAChB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAGD;;OAEG;IACH,+BAAW,GAAX,UAAY,OAAoB;QAAhC,iBAiBC;QAjBW,wBAAA,EAAA,YAAoB;QAC9B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACrC,OAAO,EAAE,OAAO;aACjB,CAAC,CAAC;YAEH,UAAU,CAAC;gBACT,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBACrB,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBACzB,CAAC;YACH,CAAC,EAAE,IAAI,CAAC,CAAC;YAET,UAAU,CAAC;gBACT,KAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC,EAAE,KAAK,CAAC,CAAC;QACZ,CAAC;IACH,CAAC;IAAA,CAAC;IAEF;;OAEG;IACH,kCAAc,GAAd,UAAe,OAAoB;QAAnC,iBAcC;QAdc,wBAAA,EAAA,YAAoB;QAEjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACrC,OAAO,EAAE,OAAO;aACjB,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,UAAU,CAAC;gBACT,KAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC,EAAE,KAAK,CAAC,CAAC;QACZ,CAAC;IACH,CAAC;IAAA,CAAC;IAEF;;OAEG;IACH,+BAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;IACH,CAAC;IAAA,CAAC;IAGF;;OAEG;IACH,kCAAc,GAAd;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,gCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,MAAM,CAAC;IACzC,CAAC;IAGH,gBAAC;AAAD,CAAC,AAtLD,IAsLC;AAtLY,SAAS;IADrB,UAAU,EAAE;qCAKmB,QAAQ;QACP,eAAe;QACb,iBAAiB;QACnB,eAAe;QAClB,OAAO;QACR,KAAK;GATrB,SAAS,CAsLrB;SAtLY,SAAS","sourcesContent":["/**\n * 用户交互反馈\n *\n * 规划：1.环境判断   2.loading效果  3.提示(toast)  4.网络判断\n */\nimport { Injectable } from '@angular/core';\nimport { ToastController, LoadingController, Platform, Loading, AlertController } from 'ionic-angular';\nimport { Toast } from '@ionic-native/toast';\nimport { Network} from '@ionic-native/network';\n\n\n@Injectable()\nexport class UIService {\n  private loading: Loading;\n  private loadRunning: boolean = false;\n\n  constructor(private platform: Platform,\n              private toastCtrl: ToastController,\n              private loadingCtrl: LoadingController,\n              private alertCtrl: AlertController,\n              private network:Network,\n              private toast: Toast\n\n  ) {\n  }\n\n\n  /**\n   * 是否真机环境\n   * @return {boolean}\n   */\n  isMobile() {\n    return this.platform.is('mobile') && !this.platform.is('mobileweb');\n  }\n\n  /**\n   * 是否android\n   * @return {boolean}\n   */\n  isAndroid() {\n    return this.isMobile() && this.platform.is('android');\n  }\n\n  /**\n   * 是否ios\n   * @return {boolean}\n   */\n  isIos() {\n    return this.isMobile() && (this.platform.is('ios') || this.platform.is('ipad') || this.platform.is('iphone'));\n  }\n\n\n\n  showToast(message: string, duration: number = 2000) {\n    if (this.isMobile()) {\n      this.toast.show(message, String(duration), 'center').subscribe();\n    } else {\n      this.toastCtrl.create({\n        message: message,\n        duration: duration,\n        position: 'middle',\n        showCloseButton: false\n      }).present();\n    }\n  };\n\n\n  showToastBottom(message: string, duration: number = 2000) {\n    if (this.isMobile()) {\n      this.toast.show(message, String(duration), 'bottom').subscribe();\n    } else {\n      this.toastCtrl.create({\n        message: message,\n        duration: duration,\n        position: 'bottom',\n        showCloseButton: false\n      }).present();\n    }\n  };\n\n  showToastTop(message: string, duration: number = 2000) {\n    if (this.isMobile()) {\n      this.toast.show(message, String(duration), 'top').subscribe();\n    } else {\n      this.toastCtrl.create({\n        message: message,\n        duration: duration,\n        position: 'top',\n        showCloseButton: false\n      }).present();\n    }\n  };\n\n  presentConfirm(title: string, message: string, cb:any) {\n    let alert = this.alertCtrl.create({\n      title: title,\n      message: message,\n      buttons: [\n        {\n          text: '取消',\n          role: 'cancel',\n          handler: () => {}\n        },\n        {\n          text: '确定',\n          handler: () => {\n            cb();\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  presentAlert(message: string) {\n    let alert = this.alertCtrl.create({\n      subTitle: message,\n      buttons: ['确认']\n    });\n    alert.present();\n  }\n\n\n  /**\n   * 1.5秒后显示loading\n   */\n  showLoading(content: string = '') {\n    if (!this.loadRunning) {\n      this.loadRunning = true;\n      this.loading = this.loadingCtrl.create({\n        content: content\n      });\n\n      setTimeout(() => {//1500毫秒内完成的请求不显示loading\n        if (this.loadRunning) {\n          this.loading.present();\n        }\n      }, 1500);\n\n      setTimeout(() => {//最长显示10秒\n        this.hideLoading();\n      }, 10000);\n    }\n  };\n\n  /**\n   *立刻显示loading\n   */\n  showLoadingNow(content: string = '') {\n\n    if (!this.loadRunning) {\n      this.loading = this.loadingCtrl.create({\n        content: content\n      });\n\n      this.loading.present();\n      this.loadRunning = true;\n\n      setTimeout(() => {//最长显示10秒\n        this.hideLoading();\n      }, 10000);\n    }\n  };\n\n  /**\n   * 关闭loading\n   */\n  hideLoading() {\n    if (this.loadRunning) {\n      this.loading.dismiss();\n      this.loadRunning = false;\n    }\n  };\n\n\n  /**\n   * 获取网络类型 如`unknown`, `ethernet`, `wifi`, `2g`, `3g`, `4g`, `cellular`, `none`\n   */\n  getNetworkType(): string {\n    if (!this.isMobile()) {\n      return 'wifi';\n    }\n    return this.network.type;\n  }\n\n  /**\n   * 判断是否有网络\n   * @returns {boolean}\n   */\n  isConnecting(): boolean {\n    return this.getNetworkType() != 'none';\n  }\n\n\n}\n"]}